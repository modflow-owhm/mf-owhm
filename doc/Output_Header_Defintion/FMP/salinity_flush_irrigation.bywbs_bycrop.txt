
PRINT ByWBS_ByCrop Output file from FMP SALINITY_FLUSH_IRRIGATION Block


Writes for each time step a summary of salinity irrigation flush demand and flows
for each Water Balance Subregion (WBS) and for each land use (crop).

The output may be text or binary format.

If the output file is text format, then it will contain a single header line
followed by the output written for each time step. If the output file is binary format,
then each times step writes a binary record containing only the output data.

Note that, the keyword PRINT ByWBS has the same headers, except it does not include 
the CROP header because it aggregates all crops together by WBS. The keyword 
PRINT ALL has the same headers, except it is written for every model cell 
and contains the header ROW and COL, for the model row and column, after the header WBS.



/-------------------------------------\
|                                     |
|    Text File Header Definition      |
|                                     |
\-------------------------------------/

PER                        is the stress period number
STP                        is the time step number
WBS                        is the Water Balance Subregion (Farm) ID number that the FMP supply well provides water to (pumps to meet the WBS demand)
CROP                       is the Land-use (Crop) ID number
CROP_NAME                  is the name of the specific crop
DEMAND%CHANGE     [%]      is the percentage increase in irrigation for salinity ﬂushing
CROP_AREA         [L2]     is the area of land the crop occupies for the specified WBS
IRRIGATED_AREA    [L2]     is the area of land the crop occupies that is irrigated for the specified WBS
SALINITY_AREA     [L2]     is the area of land the crop occupies that has salinity ﬂushing irrigation for the specified WBS
PRECIPITATION     [L3/T]   is the total precipitation
TOT_IRRIGATION    [L3/T]   is the total irrigation applied to the crop (irrigation demand plus salinity flushing demand)
TOT_DEEP_PERC     [L3/T]   is the total loss of water to deep percolation (groundwater recharge)
LEACH_FRACTION             is the leaching fraction (LF)
CU                [L3/T]   is the actual crop consumptive use based on water supply
ET_IRR            [L3/T]   is the evapotranspiration of water that originated from irrigation water supply
SALT_REQ_IRR      [L3/T]   is the necessary irrigation to meet the salinity ﬂushing requirement, assuming perfect efficiency
SALT_IRR          [L3/T]   is the final irrigation used to meet the salinity ﬂushing requirement, assuming perfect efficiency
SALT_REQ_DEMAND   [L3/T]   is the necessary irrigation to meet the salinity ﬂushing requirement
SALT_DEMAND       [L3/T]   is the final irrigation used to meet the salinity ﬂushing requirement
LEACH_REQ         [L3/T]   is the calculated leaching requirement
ECe               [dS/m]   is the crop electrical conductivity tolerance                  
ECw               [dS/m]   is the irrigation water's electrical conductivity
IRR_UNIFORMITY    [dS/m]   is the irrigation uniformity of the all the irrigation water applied
DELT              [T]      is the time step length
DYEAR                      is the date at the end of the time step as a decimal year
DATE_START                 is the starting calendar date of the time step in the form: yyyy-mm-ddThh:mm:ss


/-------------------------------------\
|                                     |
|    Binary File Record Formatting    |
|                                     |
\-------------------------------------/

CDAT%CROP_NAME(I), PIN, AREA, WBS%IRR_AREA(F), SALT_AREA, P, AW, DP_TOT, LF, CU, ETi, CIRI, CIR, DMDI, DMD, LR, ECe, ECw, DU 
DATE_START          CHARACTER(19), starting date formatted as ‘yyyy-mm-ddThh:mm:ss’
DYEAR               DOUBLE
DELT                DOUBLE
PER                 INTEGER
STP                 INTEGER
WBS                 INTEGER
CROP                INTEGER
CROP_NAME           CHARACTER(20)
DEMAND%CHANGE       DOUBLE
CROP_AREA           DOUBLE
IRRIGATED_AREA      DOUBLE
SALINITY_AREA       DOUBLE
PRECIPITATION       DOUBLE
TOT_IRRIGATION      DOUBLE
TOT_DEEP_PERC       DOUBLE
LEACH_FRACTION      DOUBLE
CU                  DOUBLE
ET_IRR              DOUBLE
SALT_REQ_IRR        DOUBLE
SALT_IRR            DOUBLE
SALT_REQ_DEMAND     DOUBLE
SALT_DEMAND         DOUBLE
LEACH_REQ           DOUBLE
ECe                 DOUBLE
ECw                 DOUBLE
IRR_UNIFORMITY      DOUBLE


/----------------------------\
|                            |
|   Additional Information   |
|                            |
\----------------------------/


Date output is formatted using ISO 8601-1:2019 standard without a time zone designation:
https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations

The general format is:
yyyy-mm-ddThh:mm:ss
                   where:
                         yyyy is the four digit Gregorian year
                         mm   before the T is the two digit month number       (01 to 12)
                         dd   is the two digit day of the month                (01 to {28, 29, 30, 31}, depending on the month)
                         T    calendar date and 24-hour clock time separator
                         hh   is the hour within the day                       (00 to 23 hour)
                         mm   after the T is the two digit minutes in the hour (00 to 59 minute)
                         ss   is the two digit seconds of the minute           (00 to 59 second)

Output is in model units that uses an
   L as a place holder for Length, L2 is for area, L3 is for volume and
   T as a place holder for Time

which are defined in the DIS package as being:
   L: Feet, Meters, Centimeters, and Undefined
   T: Seconds, Minutes, Hours, Days, Years, and Undefined

------------------------------------------------------------------------------------------

The MODFLOW-OWHM standard binary formatting is set to
Fortran Unformatted Stream (C style binary).

The description of each header indicates the Fortran variable
that is used to write the binary recorded.

The following explain their storage use:

Keyword       Storage      Default Fortran Type  Python Numpy Type       Fortran 2003 Standard
DOUBLE        8 bytes      Double Precision      numpy.dtype('float64')  REAL(kind=real64)
INTEGER       4 bytes      Integer               numpy.dtype('int32')    INTEGER(kind=int32)
CHARACTER(X)  X × 1 bytes  Character(X)          numpy.dtype('SX')       CHARACTER(len=X)
SNGL          4 bytes      Real                  numpy.dtype('float32')  REAL(kind=real32)
